{"ast":null,"code":"import _defineProperty from\"C:/Users/NIKHIL RAJPUT/Desktop/Mern chat app/Chat-Karoo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _regeneratorRuntime from\"C:/Users/NIKHIL RAJPUT/Desktop/Mern chat app/Chat-Karoo/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/NIKHIL RAJPUT/Desktop/Mern chat app/Chat-Karoo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/NIKHIL RAJPUT/Desktop/Mern chat app/Chat-Karoo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{collection,query,where,getDocs,getDoc,setDoc,doc,updateDoc,serverTimestamp}from\"firebase/firestore\";import React from'react';import{useContext}from\"react\";import{useState}from'react';import{db}from'../firebase';import{AuthContext}from'../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Search=function Search(){var _ref,_ref2;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];//This is useState for the Input user and if the user present  we want to show that hence we need below\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),user=_useState4[0],setUser=_useState4[1];//This is for the user present to show the user \nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),err=_useState6[0],setErr=_useState6[1];var _useContext=useContext(AuthContext),currentUser=_useContext.currentUser;console.log(currentUser);/* Handled by Firebase Query \n  function for Search any user */var handleSearch=function handleSearch(){return(_ref=_ref||_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var q,querySnapshot;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:q=query(collection(db,\"users\"),where(\"displayName\",\"==\",username));//Collecting data in users collection if displayName is equal to user \n_context.prev=1;_context.next=4;return getDocs(q);case 4:querySnapshot=_context.sent;querySnapshot.forEach(function(doc){setUser(doc.data());});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);setErr(true);case 11:case\"end\":return _context.stop();}},_callee,null,[[1,8]]);}))).apply(this,arguments);};var handleKey=function handleKey(event){event.code===\"Enter\"&&handleSearch();//When event is equal to Enter then we just search for the user\n};var handleSelect=function handleSelect(){return(_ref2=_ref2||_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var combinedId,res,_updateDoc,_updateDoc2;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0://check wether the group(chats in firestore) exists, if not create \ncombinedId=currentUser.uid>user.uid?currentUser.uid+user.uid:user.uid+currentUser.uid;_context2.prev=1;_context2.next=4;return getDoc(doc(db,\"chats\",combinedId));case 4:res=_context2.sent;console.log(res);/*If the Response that is chat between the user is not exsit we create the Chats  */if(res.exists()){_context2.next=14;break;}//creating chat in chats collection \nconsole.log(res);_context2.next=10;return setDoc(doc(db,\"chats\",combinedId),{messages:[]});case 10:_context2.next=12;return updateDoc(doc(db,\"usersChat\",currentUser.uid),(_updateDoc={},_defineProperty(_updateDoc,combinedId+\".userInfo\",{uid:user.uid,displayName:user.displayName,photoURL:user.photoURL}),_defineProperty(_updateDoc,combinedId+\".date\",serverTimestamp()),_updateDoc));case 12:_context2.next=14;return updateDoc(doc(db,\"usersChat\",user.uid),(_updateDoc2={},_defineProperty(_updateDoc2,combinedId+\".userInfo\",{uid:currentUser.uid,displayName:currentUser.displayName,photoURL:currentUser.photoURL}),_defineProperty(_updateDoc2,combinedId+\".date\",serverTimestamp()),_updateDoc2));case 14:_context2.next=18;break;case 16:_context2.prev=16;_context2.t0=_context2[\"catch\"](1);case 18:setUser(null);setUsername(\"\");//create user chats\ncase 20:case\"end\":return _context2.stop();}},_callee2,null,[[1,16]]);}))).apply(this,arguments);};return/*#__PURE__*/_jsxs(\"div\",{className:\"search\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"searchForm\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Find a user\",onKeyDown:handleKey,onChange:function onChange(event){return setUsername(event.target.value);},value:username})}),err&&/*#__PURE__*/_jsx(\"span\",{children:\" User Not Found\"}),user&&/*#__PURE__*/_jsxs(\"div\",{className:\"userChat\",onClick:handleSelect,children:[/*#__PURE__*/_jsx(\"img\",{src:user.photoURL,alt:\"\"}),/*#__PURE__*/_jsx(\"div\",{className:\"userChatInfo\",children:/*#__PURE__*/_jsx(\"span\",{children:user.displayName})})]})]});};export default Search;","map":{"version":3,"names":["collection","query","where","getDocs","getDoc","setDoc","doc","updateDoc","serverTimestamp","React","useContext","useState","db","AuthContext","jsx","_jsx","jsxs","_jsxs","Search","_ref","_ref2","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","user","setUser","_useState5","_useState6","err","setErr","_useContext","currentUser","console","log","handleSearch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","q","querySnapshot","wrap","_callee$","_context","prev","next","sent","forEach","data","t0","stop","apply","arguments","handleKey","event","code","handleSelect","_callee2","combinedId","res","_updateDoc","_updateDoc2","_callee2$","_context2","uid","exists","messages","_defineProperty","displayName","photoURL","className","children","type","placeholder","onKeyDown","onChange","target","value","onClick","src","alt"],"sources":["C:/Users/NIKHIL RAJPUT/Desktop/Mern chat app/Chat-Karoo/src/component/Search.jsx"],"sourcesContent":["\nimport { collection, query, where,getDocs, getDoc, setDoc ,doc, updateDoc, serverTimestamp} from \"firebase/firestore\";\nimport React from 'react'\nimport { useContext } from \"react\";\nimport { useState } from 'react'\nimport {db} from '../firebase'\nimport { AuthContext } from '../context/AuthContext';\n\n\nconst Search = () => {\n\n  const [username,setUsername] = useState(\"\");  //This is useState for the Input user and if the user present  we want to show that hence we need below\n  const [user, setUser] = useState(null) ;        //This is for the user present to show the user \n  const [err, setErr] = useState(false);  \n  \n  \n  const {currentUser} = useContext(AuthContext);\n  console.log(currentUser);\n\n   \n  /* Handled by Firebase Query \n  function for Search any user */\n  const handleSearch = async () =>{       \n    \n      const q = query(\n        collection(db,\"users\"),\n        where(\"displayName\", \"==\",username)\n        ); //Collecting data in users collection if displayName is equal to user \n      \n      \n      try{\n         \n     const querySnapshot = await getDocs(q);\n     querySnapshot.forEach((doc) => {\n       setUser(doc.data())\n    });\n\n      }catch(error){\n            setErr(true)\n      }\n        \n\n  };\n\n  const handleKey = (event) =>{\n    event.code ===\"Enter\" && handleSearch();  //When event is equal to Enter then we just search for the user\n  };\n\n\n  const handleSelect = async () =>\n  {\n     //check wether the group(chats in firestore) exists, if not create \n       const combinedId  = \n       currentUser.uid > user.uid \n       ? currentUser.uid + user.uid \n        : user.uid + currentUser.uid;\n    \n        \n        \n       try{\n        //if the chat between the user is exist \n         //we store in the response constant\n    \n           \n         const res = await getDoc(doc(db,\"chats\",combinedId));\n         console.log(res)\n        /*If the Response that is chat between the user is not exsit we create the Chats  */\n         if(!res.exists()){\n           \n            //creating chat in chats collection \n             console.log(res)\n            \n            await setDoc(doc(db,\"chats\",combinedId), {messages :[] });\n            //create user Chats\n\n            /* while Creating user Chats in search bar what we need is \n               *both userID(id)\n               *last message {we want to show at bottom of every user}\n               *displayName (dn)\n               *img \n               *date {we are going to sort the date in this file }\n            */\n             \n         /*   usersChat:{\n               joyeId :{              \n                 combinedId :{\n                       userInfo{\n                          dn,img,id \n                       },\n                       lastMessage:\"\"       //rightnow we dont have any chat \n                       date:               //it is current date\n                 }\n               }\n            } */ \n            \n            await updateDoc(doc(db,\"usersChat\",currentUser.uid),{\n                 [combinedId + \".userInfo\"] :{\n                    \n                    uid : user.uid,\n                    displayName : user.displayName,\n                    photoURL : user.photoURL,\n\n                 },\n\n                 [combinedId + \".date\"] : serverTimestamp() ,   //serverTimeStamp is  function of firebase it calculated time according  to different time zone \n\n                /* RightNow we are not intialising the bottom msg of the user\n                   Because right now we dont have any current user \n\n                   we are updating it when we Send msg to friend\n                */  \n\n            });\n\n            /* We are doing same thing for the other side of  user  */\n             \n            await updateDoc(doc(db,\"usersChat\",user.uid),{\n              [combinedId + \".userInfo\"] :{\n                 \n                 uid : currentUser.uid,\n                 displayName : currentUser.displayName,\n                 photoURL : currentUser.photoURL\n\n              },\n\n              [combinedId + \".date\"] : serverTimestamp() ,   //serverTimeStamp is  function of firebase it calculated time according  to different time zone \n\n             /* RightNow we are not intialising the bottom msg of the user\n                Because right now we dont have any current user \n\n                we are updating it when we Send msg to friend\n             */  \n\n         });\n\n\n         }\n       }\n       catch(err){}\n      \n    setUser(null);\n    setUsername(\"\");\n       \n     //create user chats\n  };\n\n  return (\n    <div className='search'>\n      <div className=\"searchForm\">\n        <input type=\"text\" placeholder='Find a user' onKeyDown={handleKey} onChange={(event)=>setUsername(event.target.value)} value = {username} /> \n       </div>\n       {err && <span> User Not Found</span> }\n      {user && <div className=\"userChat\" onClick={handleSelect} > \n        <img src={user.photoURL} alt=\"\" />\n        <div className=\"userChatInfo\">\n             <span>{user.displayName}</span>\n        </div>\n       </div>}\n    </div>\n    \n  );\n};\n\nexport default Search;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}