{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NIKHIL RAJPUT\\\\Desktop\\\\Mern chat app\\\\Chat-Karoo\\\\src\\\\component\\\\Chats.jsx\",\n  _s = $RefreshSig$();\nimport { doc, onSnapshot } from 'firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport { db } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chats = () => {\n  _s();\n  var _Object$entries;\n  const [chats, setChats] = useState([]);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    dispatch\n  } = useContext(ChatContext);\n  useEffect(() => {\n    //We are using getChats function because at first we dont have any user chat hence it is giving error\n\n    const getChats = () => {\n      const unsub = onSnapshot(doc(db, \"usersChat\", currentUser.uid), doc => {\n        setChats(doc.data());\n      });\n      return () => {\n        unsub();\n      };\n    };\n\n    //It is Saying if we have currentUser id then we are going to call this function \n    currentUser.uid && getChats();\n  }, [currentUser.uid]);\n\n  /* u -> user passed from handleSelect on Click function which includes\n     userInfo like id , image and display Name */\n  const handleSelect = u => {\n    dispatch({\n      type: \"CHANGE_USER\",\n      payload: u\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats\",\n    children: (_Object$entries = Object.entries(chats)) === null || _Object$entries === void 0 ? void 0 : _Object$entries.sort((a, b) => b[1].date - a[1].date).map(chat => {\n      var _chat$1$lastMessage;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChat\",\n        onClick: () => handleSelect(chat[1].userInfo),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: chat[1].userInfo.photoURL,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userChatInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: chat[1].userInfo.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_chat$1$lastMessage = chat[1].lastMessage) === null || _chat$1$lastMessage === void 0 ? void 0 : _chat$1$lastMessage.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, chat[0], true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Chats, \"PKlfs5vVrJUUTja9B24kklI/GGk=\");\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["doc","onSnapshot","React","useEffect","useState","useContext","AuthContext","ChatContext","db","jsxDEV","_jsxDEV","Chats","_s","_Object$entries","chats","setChats","currentUser","dispatch","getChats","unsub","uid","data","handleSelect","u","type","payload","className","children","Object","entries","sort","a","b","date","map","chat","_chat$1$lastMessage","onClick","userInfo","src","photoURL","alt","fileName","_jsxFileName","lineNumber","columnNumber","displayName","lastMessage","text","_c","$RefreshReg$"],"sources":["C:/Users/NIKHIL RAJPUT/Desktop/Mern chat app/Chat-Karoo/src/component/Chats.jsx"],"sourcesContent":["import { doc, onSnapshot } from 'firebase/firestore';\nimport React, { useEffect, useState } from 'react'\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport { db } from '../firebase';\n\nconst Chats = () => {\n\n\n  const [chats, setChats] = useState([])\n\n  const { currentUser } = useContext(AuthContext);\n  const { dispatch } = useContext(ChatContext);\n\n  useEffect(() => {\n\n    //We are using getChats function because at first we dont have any user chat hence it is giving error\n\n    const getChats = () => {\n      const unsub = onSnapshot(doc(db, \"usersChat\", currentUser.uid), (doc) => {\n\n        setChats(doc.data())\n\n      });\n\n      return () => {\n        unsub();\n      };\n    }\n\n\n    //It is Saying if we have currentUser id then we are going to call this function \n    currentUser.uid && getChats()\n\n  }, [currentUser.uid])\n\n  /* u -> user passed from handleSelect on Click function which includes\n     userInfo like id , image and display Name */\n  const handleSelect = (u) => {\n\n    dispatch({ type: \"CHANGE_USER\", payload: u })\n  }\n\n  return (\n    <div className='chats'>\n\n      {/*we are converting the currentUser Object to Array and map with the variable chat s\n      so we can access each index of it */}\n\n      {Object.entries(chats)?.sort((a, b) => b[1].date - a[1].date).map((chat) => (\n\n        <div className=\"userChat\" key={chat[0]} onClick={() => handleSelect(chat[1].userInfo)}>\n          <img src={chat[1].userInfo.photoURL} alt=\"\" />\n          <div className=\"userChatInfo\">\n            <span>{chat[1].userInfo.displayName}</span>\n            <p>{chat[1].lastMessage?.text}</p>\n\n            {/*Hence we are sorting the messages  */}\n          </div>\n\n        </div>\n\n      ))}\n\n    </div>\n  )\n}\n\nexport default Chats"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}