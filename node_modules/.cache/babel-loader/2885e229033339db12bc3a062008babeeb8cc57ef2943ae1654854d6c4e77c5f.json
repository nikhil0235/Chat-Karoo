{"ast":null,"code":"import _slicedToArray from\"C:/Users/NIKHIL RAJPUT/Desktop/Mern chat app/Chat-Karoo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{doc,onSnapshot}from'firebase/firestore';import React,{useContext,useState}from'react';import{useEffect}from'react';import{ChatContext}from'../context/ChatContext';import{db}from'../firebase';import Message from'./Message';import{jsx as _jsx}from\"react/jsx-runtime\";var Messages=function Messages(){//Creating this messages to fetching the data from the chat Collections \n//Which is ChatCombined id and messages \nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useContext=useContext(ChatContext),data=_useContext.data;useEffect(function(){var unSub=onSnapshot(doc(db,\"chats\",data.chatId),function(doc){doc.exists()&&setMessages(doc.data().messages);//messages is from database that we create in firestore\n});return function(){unSub();};},[data.chatId]);console.log(messages);return/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:messages.map(function(m){return/*#__PURE__*/ (//message passing as prop we passed in message component \n_jsx(Message,{message:m},m.id));})});};export default Messages;","map":{"version":3,"names":["doc","onSnapshot","React","useContext","useState","useEffect","ChatContext","db","Message","jsx","_jsx","Messages","_useState","_useState2","_slicedToArray","messages","setMessages","_useContext","data","unSub","chatId","exists","console","log","className","children","map","m","message","id"],"sources":["C:/Users/NIKHIL RAJPUT/Desktop/Mern chat app/Chat-Karoo/src/component/Messages.jsx"],"sourcesContent":["import { doc, onSnapshot } from 'firebase/firestore';\nimport React, { useContext, useState } from 'react'\nimport { useEffect } from 'react';\nimport { ChatContext } from '../context/ChatContext';\nimport { db } from '../firebase';\nimport Message from './Message'\nconst Messages = () => {\n   \n\n  //Creating this messages to fetching the data from the chat Collections \n  //Which is ChatCombined id and messages \n  const [messages, setMessages] = useState([])\n  const {data} = useContext(ChatContext);\n\n  \n  useEffect(() => {\n     \n     const unSub = onSnapshot(doc(db,\"chats\",data.chatId),(doc) =>{\n       \n       doc.exists() && setMessages(doc.data().messages) //messages is from database that we create in firestore\n     })\n  \n    return () => {\n      unSub();\n    };\n  }, [data.chatId]);\n  \n \n  console.log(messages)\n\n\n  return (\n    <div className='messages'>\n      \n       {messages.map((m)=>(\n         \n\n            //message passing as prop we passed in message component \n           <Message message = {m} key={m.id} />\n       ))}\n    \n     \n       \n    </div>\n  );\n};\n\nexport default Messages;"],"mappings":"6IAAA,OAASA,GAAG,CAAEC,UAAU,KAAQ,oBAAoB,CACpD,MAAO,CAAAC,KAAK,EAAIC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CACnD,OAASC,SAAS,KAAQ,OAAO,CACjC,OAASC,WAAW,KAAQ,wBAAwB,CACpD,OAASC,EAAE,KAAQ,aAAa,CAChC,MAAO,CAAAC,OAAO,KAAM,WAAW,QAAAC,GAAA,IAAAC,IAAA,yBAC/B,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CAGrB;AACA;AACA,IAAAC,SAAA,CAAgCR,QAAQ,CAAC,EAAE,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,IAAAI,WAAA,CAAed,UAAU,CAACG,WAAW,CAAC,CAA/BY,IAAI,CAAAD,WAAA,CAAJC,IAAI,CAGXb,SAAS,CAAC,UAAM,CAEb,GAAM,CAAAc,KAAK,CAAGlB,UAAU,CAACD,GAAG,CAACO,EAAE,CAAC,OAAO,CAACW,IAAI,CAACE,MAAM,CAAC,CAAC,SAACpB,GAAG,CAAI,CAE3DA,GAAG,CAACqB,MAAM,CAAC,CAAC,EAAIL,WAAW,CAAChB,GAAG,CAACkB,IAAI,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC;AACnD,CAAC,CAAC,CAEH,MAAO,WAAM,CACXI,KAAK,CAAC,CAAC,CACT,CAAC,CACH,CAAC,CAAE,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAGjBE,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC,CAGrB,mBACEL,IAAA,QAAKc,SAAS,CAAC,UAAU,CAAAC,QAAA,CAErBV,QAAQ,CAACW,GAAG,CAAC,SAACC,CAAC,sBAGX;AACDjB,IAAA,CAACF,OAAO,EAACoB,OAAO,CAAID,CAAE,EAAMA,CAAC,CAACE,EAAK,CAAC,GACvC,CAAC,CAIA,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}