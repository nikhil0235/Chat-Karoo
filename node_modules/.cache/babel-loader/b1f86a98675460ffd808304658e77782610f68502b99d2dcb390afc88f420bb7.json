{"ast":null,"code":"var _jsxFileName = \"D:\\\\General\\\\chat-karo-main\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { createContext } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setcurrentUser] = useState({}); //We are going to store Current user which is signed in \n\n  useEffect(() => {\n    //We are Checking  whether we have a user or not .\n    //with  the help of using Firebase function \n\n    const unsub = onAuthStateChanged(auth, user => {\n      setcurrentUser(user);\n    });\n    return () => {\n      unsub();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 6\n  }, this);\n};\n_s(AuthContextProvider, \"GOwkcrJC9u8aGTnhEtYegxY0Iq8=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["onAuthStateChanged","createContext","useEffect","useState","auth","jsxDEV","_jsxDEV","AuthContext","AuthContextProvider","children","_s","currentUser","setcurrentUser","unsub","user","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/General/chat-karo-main/src/context/AuthContext.js"],"sourcesContent":["import { onAuthStateChanged } from \"firebase/auth\";\nimport { createContext } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\n\nexport const AuthContext = createContext();\n\nexport const AuthContextProvider = ({children}) =>{\n   \n     const [currentUser, setcurrentUser] = useState({}); //We are going to store Current user which is signed in \n\n     useEffect(() => {\n       \n        //We are Checking  whether we have a user or not .\n        //with  the help of using Firebase function \n\n       const unsub =  onAuthStateChanged(auth,(user) =>{\n           \n             setcurrentUser(user);\n       \n        });\n\n      \n      \n        return () =>{\n            unsub();\n        };\n     }, []);\n\n     return(\n     <AuthContext.Provider value={{currentUser}}>\n        {children}\n     </AuthContext.Provider>\n     );\n};"],"mappings":";;AAAA,SAASA,kBAAkB,QAAQ,eAAe;AAClD,SAASC,aAAa,QAAQ,OAAO;AACrC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,mBAAmB,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAI;EAAAC,EAAA;EAE7C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEpDD,SAAS,CAAC,MAAM;IAEb;IACA;;IAED,MAAMW,KAAK,GAAIb,kBAAkB,CAACI,IAAI,EAAEU,IAAI,IAAI;MAE1CF,cAAc,CAACE,IAAI,CAAC;IAEzB,CAAC,CAAC;IAIF,OAAO,MAAK;MACRD,KAAK,CAAC,CAAC;IACX,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACAP,OAAA,CAACC,WAAW,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAACL;IAAW,CAAE;IAAAF,QAAA,EACvCA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE5B,CAAC;AAACV,EAAA,CA3BWF,mBAAmB;AAAAa,EAAA,GAAnBb,mBAAmB;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}