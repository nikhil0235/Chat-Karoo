{"ast":null,"code":"var _jsxFileName = \"D:\\\\General\\\\chat-karo-main\\\\src\\\\component\\\\Messages.jsx\",\n  _s = $RefreshSig$();\nimport { doc, onSnapshot } from 'firebase/firestore';\nimport React, { useContext, useState } from 'react';\nimport { useEffect } from 'react';\nimport { ChatContext } from '../context/ChatContext';\nimport { db } from '../firebase';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  //Creating this messages to fetching the data from the chat Collections \n  //Which is ChatCombined id and messages \n  const [messages, setMessages] = useState([]);\n  const {\n    data\n  } = useContext(ChatContext);\n  useEffect(() => {\n    const unSub = onSnapshot(doc(db, \"chats\", data.chatId), doc => {\n      doc.exists() && setMessages(doc.data().messages); //messages is from database that we create in firestore\n    });\n\n    return () => {\n      unSub();\n    };\n  }, [data.chatId]);\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: messages.map(m =>\n    /*#__PURE__*/\n    //message passing as prop we passed in message component \n    _jsxDEV(Message, {\n      message: m\n    }, m.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"gf4LwhYeKcbM2gGF8PICJS+GOLM=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["doc","onSnapshot","React","useContext","useState","useEffect","ChatContext","db","Message","jsxDEV","_jsxDEV","Messages","_s","messages","setMessages","data","unSub","chatId","exists","console","log","className","children","map","m","message","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/General/chat-karo-main/src/component/Messages.jsx"],"sourcesContent":["import { doc, onSnapshot } from 'firebase/firestore';\nimport React, { useContext, useState } from 'react'\nimport { useEffect } from 'react';\nimport { ChatContext } from '../context/ChatContext';\nimport { db } from '../firebase';\nimport Message from './Message'\nconst Messages = () => {\n   \n\n  //Creating this messages to fetching the data from the chat Collections \n  //Which is ChatCombined id and messages \n  const [messages, setMessages] = useState([])\n  const {data} = useContext(ChatContext);\n\n  \n  useEffect(() => {\n     \n     const unSub = onSnapshot(doc(db,\"chats\",data.chatId),(doc) =>{\n       \n       doc.exists() && setMessages(doc.data().messages) //messages is from database that we create in firestore\n     })\n  \n    return () => {\n      unSub();\n    };\n  }, [data.chatId]);\n  \n \n  console.log(messages)\n\n\n  return (\n    <div className='messages'>\n      \n       {messages.map((m)=>(\n         \n\n            //message passing as prop we passed in message component \n           <Message message = {m} key={m.id} />\n       ))}\n    \n     \n       \n    </div>\n  );\n};\n\nexport default Messages;"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AACpD,OAAOC,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,EAAE,QAAQ,aAAa;AAChC,OAAOC,OAAO,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC/B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGrB;EACA;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAACW;EAAI,CAAC,GAAGZ,UAAU,CAACG,WAAW,CAAC;EAGtCD,SAAS,CAAC,MAAM;IAEb,MAAMW,KAAK,GAAGf,UAAU,CAACD,GAAG,CAACO,EAAE,EAAC,OAAO,EAACQ,IAAI,CAACE,MAAM,CAAC,EAAEjB,GAAG,IAAI;MAE3DA,GAAG,CAACkB,MAAM,CAAC,CAAC,IAAIJ,WAAW,CAACd,GAAG,CAACe,IAAI,CAAC,CAAC,CAACF,QAAQ,CAAC,EAAC;IACnD,CAAC,CAAC;;IAEH,OAAO,MAAM;MACXG,KAAK,CAAC,CAAC;IACT,CAAC;EACH,CAAC,EAAE,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC;EAGjBE,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;EAGrB,oBACEH,OAAA;IAAKW,SAAS,EAAC,UAAU;IAAAC,QAAA,EAErBT,QAAQ,CAACU,GAAG,CAAEC,CAAC;IAAA;IAGX;IACDd,OAAA,CAACF,OAAO;MAACiB,OAAO,EAAID;IAAE,GAAMA,CAAC,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIA,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvCID,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}