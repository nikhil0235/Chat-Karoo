{"ast":null,"code":"import _slicedToArray from\"C:/Users/NIKHIL RAJPUT/Desktop/Mern chat app/Chat-Karoo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext,useReducer}from\"react\";import{createContext}from\"react\";import{AuthContext}from\"./AuthContext\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ChatContext=/*#__PURE__*/createContext();export var ChatContextProvider=function ChatContextProvider(_ref){var children=_ref.children;//We are using useReducer\nvar _useContext=useContext(AuthContext),currentUser=_useContext.currentUser;var INITIAL_STATE={chatId:\"null\",user:{}};var chatReducer=function chatReducer(state,action){switch(action.type){case\"CHANGE_USER\":return{user:action.payload,chatId:currentUser.uid>action.payload.uid?currentUser.uid+action.payload.uid:action.payload.uid+currentUser.uid};default:return state;}};var _useReducer=useReducer(chatReducer,INITIAL_STATE),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(ChatContext.Provider,{value:{data:state,dispatch:dispatch},children:children});};","map":{"version":3,"names":["useContext","useReducer","createContext","AuthContext","jsx","_jsx","ChatContext","ChatContextProvider","_ref","children","_useContext","currentUser","INITIAL_STATE","chatId","user","chatReducer","state","action","type","payload","uid","_useReducer","_useReducer2","_slicedToArray","dispatch","Provider","value","data"],"sources":["C:/Users/NIKHIL RAJPUT/Desktop/Mern chat app/Chat-Karoo/src/context/ChatContext.js"],"sourcesContent":["\n\nimport { useContext, useReducer } from \"react\";\nimport { createContext } from \"react\";\n\n\nimport { AuthContext } from \"./AuthContext\";\n\nexport const ChatContext = createContext();\n\n\n\nexport const ChatContextProvider = ({children}) =>{\n   \n  //We are using useReducer\n  const {currentUser} = useContext(AuthContext);\n  const INITIAL_STATE ={\n        \n       chatId : \"null\",\n       user :{},\n       \n  };\n\n  const chatReducer = (state,action) =>{\n\n      switch(action.type){\n        case \"CHANGE_USER\" :\n            return{\n\n               user:action.payload,\n               chatId :  currentUser.uid > action.payload.uid \n               ? currentUser.uid + action.payload.uid \n                : action.payload.uid + currentUser.uid,\n            };\n      \n      default:\n         return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE)\n\n     return(\n     <ChatContext.Provider value={{data:state,dispatch}}>\n        {children}\n     </ChatContext.Provider>\n     );\n};"],"mappings":"6IAEA,OAASA,UAAU,CAAEC,UAAU,KAAQ,OAAO,CAC9C,OAASC,aAAa,KAAQ,OAAO,CAGrC,OAASC,WAAW,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,MAAO,IAAM,CAAAC,WAAW,cAAGJ,aAAa,CAAC,CAAC,CAI1C,MAAO,IAAM,CAAAK,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAAC,IAAA,CAAkB,IAAb,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAE3C;AACA,IAAAC,WAAA,CAAsBV,UAAU,CAACG,WAAW,CAAC,CAAtCQ,WAAW,CAAAD,WAAA,CAAXC,WAAW,CAClB,GAAM,CAAAC,aAAa,CAAE,CAEhBC,MAAM,CAAG,MAAM,CACfC,IAAI,CAAE,CAAC,CAEZ,CAAC,CAED,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,KAAK,CAACC,MAAM,CAAI,CAEjC,OAAOA,MAAM,CAACC,IAAI,EAChB,IAAK,aAAa,CACd,MAAM,CAEHJ,IAAI,CAACG,MAAM,CAACE,OAAO,CACnBN,MAAM,CAAIF,WAAW,CAACS,GAAG,CAAGH,MAAM,CAACE,OAAO,CAACC,GAAG,CAC5CT,WAAW,CAACS,GAAG,CAAGH,MAAM,CAACE,OAAO,CAACC,GAAG,CACnCH,MAAM,CAACE,OAAO,CAACC,GAAG,CAAGT,WAAW,CAACS,GACvC,CAAC,CAEP,QACG,MAAO,CAAAJ,KAAK,CACjB,CACF,CAAC,CAED,IAAAK,WAAA,CAA0BpB,UAAU,CAACc,WAAW,CAAEH,aAAa,CAAC,CAAAU,YAAA,CAAAC,cAAA,CAAAF,WAAA,IAAzDL,KAAK,CAAAM,YAAA,IAAEE,QAAQ,CAAAF,YAAA,IAEnB,mBACAjB,IAAA,CAACC,WAAW,CAACmB,QAAQ,EAACC,KAAK,CAAE,CAACC,IAAI,CAACX,KAAK,CAACQ,QAAQ,CAARA,QAAQ,CAAE,CAAAf,QAAA,CAC/CA,QAAQ,CACU,CAAC,CAE5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}